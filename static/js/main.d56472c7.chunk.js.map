{"version":3,"sources":["utils/serviceAPI.js","components/modal/Modal.jsx","components/imageGallery/ImageGallery.jsx","components/searchbar/Searchbar.jsx","components/App.jsx","index.js"],"names":["KEY","getImagesApi","query","page","perPage","fetch","then","res","json","response","hits","Modal","closeModal","largeImageURL","handleEscape","e","code","useEffect","window","addEventListener","document","querySelector","style","overflow","removeEventListener","onClick","target","currentTarget","className","src","alt","ImageGallery","useState","setPage","images","setImages","loading","setLoading","largeImgURL","setLargeImgURL","isOpenModal","setIsOpenModal","getImages","pictures","prevImages","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","prev","type","color","height","width","timeout","length","map","image","webformatURL","tags","setLargeImg","id","prevPage","Searchbar","onSubmit","setQuery","event","trim","preventDefault","toast","error","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","App","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d56472c7.chunk.js","sourcesContent":["const KEY = '22773171-6fe03cddc33c3049d7faab277';\r\nexport const getImagesApi = (query, page = 1, perPage = 12) => {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      return response.hits;\r\n    });\r\n};\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ closeModal, largeImageURL }) => {\r\n  const handleEscape = e => e.code === 'Escape' && closeModal();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleEscape);\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = 'hidden';\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEscape);\r\n      const body = document.querySelector('body');\r\n      body.style.overflow = 'auto';\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onOverlayClick = ({ target, currentTarget }) => {\r\n    target === currentTarget && closeModal();\r\n  };\r\n\r\n  return (\r\n    <div onClick={onOverlayClick} className=\"Overlay\">\r\n      <div className=\"Modal\">\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { getImagesApi } from '../../utils/serviceAPI';\r\nimport Modal from '../modal/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ query }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [largeImgURL, setLargeImgURL] = useState('');\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n  const getImages = (query, page = 1) => {\r\n    setLoading(true);\r\n    getImagesApi(query, page)\r\n      .then(pictures => setImages(prevImages => [...prevImages, ...pictures]))\r\n      .finally(() => {\r\n        setLoading(false);\r\n        if (page > 1) {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      getImages(query);\r\n      setPage(1);\r\n      setImages([]);\r\n    }\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if (page !== 1) {\r\n      getImages(query, page);\r\n    }\r\n  }, [page, query]);\r\n\r\n  const handleLoadMore = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n  const toggleModal = () => {\r\n    setIsOpenModal(prev => !prev);\r\n  };\r\n  const setLargeImg = largeImgURL => {\r\n    setLargeImgURL(largeImgURL);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} timeout={3000} />\r\n      )}\r\n      {images.length > 0 && (\r\n        <ul className=\"ImageGallery\">\r\n          {images.map(image => (\r\n            <li key={image.id} onClick={toggleModal} className=\"ImageGalleryItem\">\r\n              <img\r\n                src={image.webformatURL}\r\n                alt={image.tags}\r\n                onClick={() => setLargeImg(image.largeImageURL)}\r\n                className=\"ImageGalleryItem-image\"\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {isOpenModal && <Modal largeImageURL={largeImgURL} closeModal={toggleModal} />}\r\n      {images.length > 1 && (\r\n        <button className=\"Button\" type=\"button\" onClick={handleLoadMore}>\r\n          Load more\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string,\r\n};\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleQueryChange = event => {\r\n    setQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (query.trim() === '') {\r\n      event.preventDefault();\r\n      toast.error('Введите данные для запроса');\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    onSubmit(query);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleQueryChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import { useState } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from './imageGallery/ImageGallery';\nimport Searchbar from './searchbar/Searchbar';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n  };\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery query={query} />\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}